name: CI/CD QA Pipeline
 
on:
  push:
    branches:
      - test
 
jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/project1:version1 .
 
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/project1:version1
 
  deploy-to-ec2-instance-1:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST_1 }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "Pull, stop, and redeploy the Docker container"
            docker pull ${{ secrets.DOCKER_USERNAME }}/project1:version1
            docker stop project1:version1 || true
            docker rm project1:version1 || true
            docker run -d --name project1:version1 -p 80:80 ${{ secrets.DOCKER_USERNAME }}/project1:version1

  deploy-to-ec2-instance-2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST_2 }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "Pull, stop, and redeploy the Docker container"
            docker pull ${{ secrets.DOCKER_USERNAME }}/project1:version1
            docker stop project1:version1 || true
            docker rm project1:version1 || true
            docker run -d --name project1:version1 -p 80:80 ${{ secrets.DOCKER_USERNAME }}/project1:version1